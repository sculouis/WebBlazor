@page "/"
@using System.Net.Http;
@using WebBlazor.Data;
@using WebBlazor.Services
@inject HttpClient Http;
@inject IDataService dataService;
@inject IJSRuntime JSRuntime;

<div class="container">
    <div class="row">
        <div class="col">
            <div class="form-group">
                <label for="exampleInputEmail1">Email address</label>
                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp"
                    placeholder="Enter email">
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="exampleInputPassword1">Password</label>
                <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="exampleInputOther">其他欄位</label>
                <input type="password" class="form-control" id="exampleInputOther" placeholder="其他欄位">
            </div>
        </div>
        <div class="col align-self-center">
            <button type="button" class="btn btn-primary" @onclick="GetTask">查詢</button>
            <button type="button" class="btn btn-secondary" @onclick="GetAddress">取消</button>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <ul>
                @if (addressList != null){
                foreach (var item in addressList)
                {
                <li>@item.text</li>
                }
                }
            </ul>
        </div>
    </div>
</div>

@code{

    private List<Address> addressList;

    protected override void OnInitialized()
    {
            Http.Timeout = TimeSpan.FromSeconds(30);
    }        

    public async Task GetTask(){
        try
        {
            HttpResponseMessage response = await Http.GetAsync("https://louis-chen-webapi.netlify.com/.netlify/functions/server/datas");
            response.EnsureSuccessStatusCode();
            string responseBody = await response.Content.ReadAsStringAsync();

            Console.WriteLine(responseBody);
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine("\nException Caught!");
            Console.WriteLine("Message :{0} ", e.Message);
        }

    }

    //取得供應商住址
    public async Task GetAddress(){
        try{ 
            if (addressList != null){
                addressList.Clear();
            }
            //呼叫JS的Function
            //await JSRuntime.InvokeAsync<string>("obj.blockUI","測試"); 
            addressList = (await dataService.GetAddress()).ToList<Address>();    
            //await JSRuntime.InvokeAsync<string>("obj.unblockUI");            
        }
        catch(Exception e){
            Console.WriteLine(e.Message);
        }
    }

}