@page "/"
@using System.Net.Http;
@using WebBlazor.Data;
@using WebBlazor.Services
@inject HttpClient Http;
@inject IDataService dataService;
@inject IJSRuntime JSRuntime;

<div class="section-box-area" id="PRDetailSearchBlock">
    <div class="box-area-title sub-id-flag" id="InformationSection-01"><b class="sub-title-flag">測試Blazor元件流程</b></div>
    <div class="box">
        <div class="row">
            <div class="col-sm-12">
                <div class="area-btn-right-1">
                    <a id="SearchPRDetailBtn" class="btn-02-blue btn-left" @onclick="GetTask">
                        <div class="icon-search bt-icon-size"></div>查詢
                    </a>
                </div>
                <div class="area-btn-right-1">
                    <a id="SearchPRDetailBtn" class="btn-02-blue btn-left" @onclick="GetAddress">
                        <div class="icon-search bt-icon-size"></div>取得住址
                    </a>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <ul>
                    @if (addressList != null){
                    foreach (var item in addressList)
                    {
                    <li>@item.text</li>
                    }
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
@code{

    private List<Address> addressList;

    protected override void OnInitialized()
    {
            Http.Timeout = TimeSpan.FromSeconds(30);
    }        

    public async Task GetTask(){
        try
        {
            HttpResponseMessage response = await Http.GetAsync("https://louis-chen-webapi.netlify.com/.netlify/functions/server/datas");
            response.EnsureSuccessStatusCode();
            string responseBody = await response.Content.ReadAsStringAsync();

            Console.WriteLine(responseBody);
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine("\nException Caught!");
            Console.WriteLine("Message :{0} ", e.Message);
        }

    }

    //取得供應商住址
    public async Task GetAddress(){
        try{ 
            if (addressList != null){
                addressList.Clear();
            }
            //呼叫JS的Function
            await JSRuntime.InvokeAsync<string>("obj.blockUI","測試");
            addressList = (await dataService.GetAddress()).ToList<Address>();    
            await JSRuntime.InvokeAsync<string>("obj.unblockUI");            
        }
        catch(Exception e){
            Console.WriteLine(e.Message);
        }
    }

}